[
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../sorting/is_sorted",
            "-I../sorting/partial_sort",
            "-I../sorting/bubble_sort",
            "-I../sorting/selection_sort",
            "-I../sorting/insertion_sort",
            "-I../sorting/heap_sort",
            "-I../sorting/merge",
            "-I../mutating/swap",
            "-I../heap/pop_heap",
            "-I../heap/push_heap",
            "-I../heap/make_heap",
            "-I../heap/sort_heap",
            "-I../mutating/swap",
            "-I../mutating/swap",
            "-I../maxmin/min_element",
            "-I../binarysearch/upper_bound",
            "-I../mutating/rotate",
            "-I../heap/make_heap",
            "-I../heap/sort_heap",
            "-I../mutating/copy",
            "-o",
            "partial_sort/partial_sort.o",
            "partial_sort/partial_sort.c"
        ],
        "directory": "StandardAlgorithms/sorting",
        "file": "partial_sort/partial_sort.c"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../heap/heap_parent",
            "-I../heap/heap_child_max",
            "-I../heap/is_heap_until",
            "-I../heap/is_heap",
            "-I../heap/push_heap",
            "-I../heap/pop_heap",
            "-I../heap/make_heap",
            "-I../heap/sort_heap",
            "-I../heap/is_heap_until",
            "-I../heap/heap_parent",
            "-I../heap/is_heap",
            "-I../heap/heap_child_max",
            "-I../heap/is_heap",
            "-I../heap/push_heap",
            "-I../heap/is_heap",
            "-I../heap/pop_heap",
            "-I../heap/make_heap",
            "-o",
            "heap_parent/heap_parent.o",
            "heap_parent/heap_parent.c"
        ],
        "directory": "StandardAlgorithms/heap",
        "file": "heap_parent/heap_parent.c"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-o",
            "replace_test.o",
            "replace_test.cpp"
        ],
        "directory": "StandardAlgorithms/mutating/replace",
        "file": "replace_test.cpp"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../mutating/fill",
            "-I../mutating/swap",
            "-I../mutating/swap_ranges",
            "-I../mutating/copy",
            "-I../mutating/copy_backward",
            "-I../mutating/reverse_copy",
            "-I../mutating/reverse",
            "-I../mutating/rotate_copy",
            "-I../mutating/rotate",
            "-I../mutating/replace_copy",
            "-I../mutating/replace",
            "-I../mutating/remove_copy",
            "-I../mutating/remove_copy2",
            "-I../mutating/remove_copy3",
            "-I../mutating/remove",
            "-I../mutating/shuffle",
            "-I../mutating/random_number",
            "-I../mutating/swap",
            "-I../mutating/swap",
            "-I../mutating/copy",
            "-I../mutating/reverse",
            "-I../mutating/swap",
            "-I../mutating/random_number",
            "-o",
            "reverse_copy/reverse_copy.o",
            "reverse_copy/reverse_copy.c"
        ],
        "directory": "StandardAlgorithms/mutating",
        "file": "reverse_copy/reverse_copy.c"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-I../../mutating/copy",
            "-o",
            "merge_test.o",
            "merge_test.cpp"
        ],
        "directory": "StandardAlgorithms/sorting/merge",
        "file": "merge_test.cpp"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-I../../binarysearch/lower_bound",
            "-o",
            "binary_search2_test.o",
            "binary_search2_test.cpp"
        ],
        "directory": "StandardAlgorithms/binarysearch/binary_search2",
        "file": "binary_search2_test.cpp"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../heap/heap_parent",
            "-I../heap/heap_child_max",
            "-I../heap/is_heap_until",
            "-I../heap/is_heap",
            "-I../heap/push_heap",
            "-I../heap/pop_heap",
            "-I../heap/make_heap",
            "-I../heap/sort_heap",
            "-I../heap/is_heap_until",
            "-I../heap/heap_parent",
            "-I../heap/is_heap",
            "-I../heap/heap_child_max",
            "-I../heap/is_heap",
            "-I../heap/push_heap",
            "-I../heap/is_heap",
            "-I../heap/pop_heap",
            "-I../heap/make_heap",
            "-o",
            "push_heap/push_heap.o",
            "push_heap/push_heap.c"
        ],
        "directory": "StandardAlgorithms/heap",
        "file": "push_heap/push_heap.c"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-I../../stack/stack_init",
            "-I../../stack/stack_size",
            "-o",
            "axiom_size_of_init_test.o",
            "axiom_size_of_init_test.cpp"
        ],
        "directory": "StandardAlgorithms/stack_axiom/axiom_size_of_init",
        "file": "axiom_size_of_init_test.cpp"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-I../../nonmutating/find2",
            "-o",
            "find5_test.o",
            "find5_test.cpp"
        ],
        "directory": "StandardAlgorithms/nonmutating/find5",
        "file": "find5_test.cpp"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../numeric/iota",
            "-I../numeric/accumulate",
            "-I../numeric/inner_product",
            "-I../numeric/partial_sum",
            "-I../numeric/adjacent_difference",
            "-I../numeric/partial_sum_inv",
            "-I../numeric/adjacent_difference_inv",
            "-I../numeric/partial_sum",
            "-I../numeric/adjacent_difference",
            "-I../numeric/partial_sum",
            "-I../numeric/adjacent_difference",
            "-o",
            "adjacent_difference_inv/adjacent_difference_inv.o",
            "adjacent_difference_inv/adjacent_difference_inv.c"
        ],
        "directory": "StandardAlgorithms/numeric",
        "file": "adjacent_difference_inv/adjacent_difference_inv.c"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../nonmutating/find",
            "-I../nonmutating/find2",
            "-I../nonmutating/find3",
            "-I../nonmutating/find4",
            "-I../nonmutating/find5",
            "-I../nonmutating/find_if_not",
            "-I../nonmutating/find_first_of",
            "-I../nonmutating/adjacent_find",
            "-I../nonmutating/mismatch",
            "-I../nonmutating/equal",
            "-I../nonmutating/search",
            "-I../nonmutating/search_n",
            "-I../nonmutating/find_end",
            "-I../nonmutating/count",
            "-I../nonmutating/count2",
            "-I../nonmutating/find3",
            "-I../nonmutating/find2",
            "-I../nonmutating/find2",
            "-I../nonmutating/mismatch",
            "-I../nonmutating/equal",
            "-I../nonmutating/equal",
            "-o",
            "search_n/search_n.o",
            "search_n/search_n.c"
        ],
        "directory": "StandardAlgorithms/nonmutating",
        "file": "search_n/search_n.c"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-I../../heap/heap_parent",
            "-I../../heap/is_heap",
            "-o",
            "push_heap_test.o",
            "push_heap_test.cpp"
        ],
        "directory": "StandardAlgorithms/heap/push_heap",
        "file": "push_heap_test.cpp"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-o",
            "heap_parent_test.o",
            "heap_parent_test.cpp"
        ],
        "directory": "StandardAlgorithms/heap/heap_parent",
        "file": "heap_parent_test.cpp"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../sorting/is_sorted",
            "-I../sorting/partial_sort",
            "-I../sorting/bubble_sort",
            "-I../sorting/selection_sort",
            "-I../sorting/insertion_sort",
            "-I../sorting/heap_sort",
            "-I../sorting/merge",
            "-I../mutating/swap",
            "-I../heap/pop_heap",
            "-I../heap/push_heap",
            "-I../heap/make_heap",
            "-I../heap/sort_heap",
            "-I../mutating/swap",
            "-I../mutating/swap",
            "-I../maxmin/min_element",
            "-I../binarysearch/upper_bound",
            "-I../mutating/rotate",
            "-I../heap/make_heap",
            "-I../heap/sort_heap",
            "-I../mutating/copy",
            "-o",
            "insertion_sort/insertion_sort.o",
            "insertion_sort/insertion_sort.c"
        ],
        "directory": "StandardAlgorithms/sorting",
        "file": "insertion_sort/insertion_sort.c"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-o",
            "accumulate_test.o",
            "accumulate_test.cpp"
        ],
        "directory": "StandardAlgorithms/numeric/accumulate",
        "file": "accumulate_test.cpp"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-I../../nonmutating/find3",
            "-o",
            "find4_test.o",
            "find4_test.cpp"
        ],
        "directory": "StandardAlgorithms/nonmutating/find4",
        "file": "find4_test.cpp"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../maxmin/clamp",
            "-I../maxmin/max_element",
            "-I../maxmin/max_element2",
            "-I../maxmin/max_seq",
            "-I../maxmin/min_element",
            "-I../maxmin/make_pair",
            "-I../maxmin/minmax_element",
            "-I../maxmin/max_element2",
            "-I../maxmin/make_pair",
            "-o",
            "min_element/min_element.o",
            "min_element/min_element.c"
        ],
        "directory": "StandardAlgorithms/maxmin",
        "file": "min_element/min_element.c"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-o",
            "is_heap_until_test.o",
            "is_heap_until_test.cpp"
        ],
        "directory": "StandardAlgorithms/heap/is_heap_until",
        "file": "is_heap_until_test.cpp"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-o",
            "iota_test.o",
            "iota_test.cpp"
        ],
        "directory": "StandardAlgorithms/numeric/iota",
        "file": "iota_test.cpp"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-o",
            "replace_copy_test.o",
            "replace_copy_test.cpp"
        ],
        "directory": "StandardAlgorithms/mutating/replace_copy",
        "file": "replace_copy_test.cpp"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-o",
            "fill_test.o",
            "fill_test.cpp"
        ],
        "directory": "StandardAlgorithms/mutating/fill",
        "file": "fill_test.cpp"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../mutating/fill",
            "-I../mutating/swap",
            "-I../mutating/swap_ranges",
            "-I../mutating/copy",
            "-I../mutating/copy_backward",
            "-I../mutating/reverse_copy",
            "-I../mutating/reverse",
            "-I../mutating/rotate_copy",
            "-I../mutating/rotate",
            "-I../mutating/replace_copy",
            "-I../mutating/replace",
            "-I../mutating/remove_copy",
            "-I../mutating/remove_copy2",
            "-I../mutating/remove_copy3",
            "-I../mutating/remove",
            "-I../mutating/shuffle",
            "-I../mutating/random_number",
            "-I../mutating/swap",
            "-I../mutating/swap",
            "-I../mutating/copy",
            "-I../mutating/reverse",
            "-I../mutating/swap",
            "-I../mutating/random_number",
            "-o",
            "random_number/random_number.o",
            "random_number/random_number.c"
        ],
        "directory": "StandardAlgorithms/mutating",
        "file": "random_number/random_number.c"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-o",
            "swap_test.o",
            "swap_test.cpp"
        ],
        "directory": "StandardAlgorithms/mutating/swap",
        "file": "swap_test.cpp"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-I../../numeric/partial_sum",
            "-I../../numeric/adjacent_difference",
            "-o",
            "partial_sum_inv_test.o",
            "partial_sum_inv_test.cpp"
        ],
        "directory": "StandardAlgorithms/numeric/partial_sum_inv",
        "file": "partial_sum_inv_test.cpp"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-I../../stack/stack_init",
            "-o",
            "stack_size_test.o",
            "stack_size_test.cpp"
        ],
        "directory": "StandardAlgorithms/stack/stack_size",
        "file": "stack_size_test.cpp"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../nonmutating/find",
            "-I../nonmutating/find2",
            "-I../nonmutating/find3",
            "-I../nonmutating/find4",
            "-I../nonmutating/find5",
            "-I../nonmutating/find_if_not",
            "-I../nonmutating/find_first_of",
            "-I../nonmutating/adjacent_find",
            "-I../nonmutating/mismatch",
            "-I../nonmutating/equal",
            "-I../nonmutating/search",
            "-I../nonmutating/search_n",
            "-I../nonmutating/find_end",
            "-I../nonmutating/count",
            "-I../nonmutating/count2",
            "-I../nonmutating/find3",
            "-I../nonmutating/find2",
            "-I../nonmutating/find2",
            "-I../nonmutating/mismatch",
            "-I../nonmutating/equal",
            "-I../nonmutating/equal",
            "-o",
            "find_if_not/find_if_not.o",
            "find_if_not/find_if_not.c"
        ],
        "directory": "StandardAlgorithms/nonmutating",
        "file": "find_if_not/find_if_not.c"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-o",
            "search_n_test.o",
            "search_n_test.cpp"
        ],
        "directory": "StandardAlgorithms/nonmutating/search_n",
        "file": "search_n_test.cpp"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-o",
            "find2_test.o",
            "find2_test.cpp"
        ],
        "directory": "StandardAlgorithms/nonmutating/find2",
        "file": "find2_test.cpp"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../maxmin/clamp",
            "-I../maxmin/max_element",
            "-I../maxmin/max_element2",
            "-I../maxmin/max_seq",
            "-I../maxmin/min_element",
            "-I../maxmin/make_pair",
            "-I../maxmin/minmax_element",
            "-I../maxmin/max_element2",
            "-I../maxmin/make_pair",
            "-o",
            "clamp/clamp.o",
            "clamp/clamp.c"
        ],
        "directory": "StandardAlgorithms/maxmin",
        "file": "clamp/clamp.c"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-I../../heap/heap_child_max",
            "-I../../heap/is_heap",
            "-o",
            "pop_heap_test.o",
            "pop_heap_test.cpp"
        ],
        "directory": "StandardAlgorithms/heap/pop_heap",
        "file": "pop_heap_test.cpp"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-I../../nonmutating/equal",
            "-o",
            "find_end_test.o",
            "find_end_test.cpp"
        ],
        "directory": "StandardAlgorithms/nonmutating/find_end",
        "file": "find_end_test.cpp"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-I../../binarysearch/lower_bound",
            "-I../../binarysearch/upper_bound",
            "-I../../maxmin/make_pair",
            "-o",
            "equal_range2_test.o",
            "equal_range2_test.cpp"
        ],
        "directory": "StandardAlgorithms/binarysearch/equal_range2",
        "file": "equal_range2_test.cpp"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-o",
            "count2_test.o",
            "count2_test.cpp"
        ],
        "directory": "StandardAlgorithms/nonmutating/count2",
        "file": "count2_test.cpp"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-o",
            "stack_init_test.o",
            "stack_init_test.cpp"
        ],
        "directory": "StandardAlgorithms/stack/stack_init",
        "file": "stack_init_test.cpp"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../mutating/fill",
            "-I../mutating/swap",
            "-I../mutating/swap_ranges",
            "-I../mutating/copy",
            "-I../mutating/copy_backward",
            "-I../mutating/reverse_copy",
            "-I../mutating/reverse",
            "-I../mutating/rotate_copy",
            "-I../mutating/rotate",
            "-I../mutating/replace_copy",
            "-I../mutating/replace",
            "-I../mutating/remove_copy",
            "-I../mutating/remove_copy2",
            "-I../mutating/remove_copy3",
            "-I../mutating/remove",
            "-I../mutating/shuffle",
            "-I../mutating/random_number",
            "-I../mutating/swap",
            "-I../mutating/swap",
            "-I../mutating/copy",
            "-I../mutating/reverse",
            "-I../mutating/swap",
            "-I../mutating/random_number",
            "-o",
            "remove_copy2/remove_copy2.o",
            "remove_copy2/remove_copy2.c"
        ],
        "directory": "StandardAlgorithms/mutating",
        "file": "remove_copy2/remove_copy2.c"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../numeric/iota",
            "-I../numeric/accumulate",
            "-I../numeric/inner_product",
            "-I../numeric/partial_sum",
            "-I../numeric/adjacent_difference",
            "-I../numeric/partial_sum_inv",
            "-I../numeric/adjacent_difference_inv",
            "-I../numeric/partial_sum",
            "-I../numeric/adjacent_difference",
            "-I../numeric/partial_sum",
            "-I../numeric/adjacent_difference",
            "-o",
            "partial_sum_inv/partial_sum_inv.o",
            "partial_sum_inv/partial_sum_inv.c"
        ],
        "directory": "StandardAlgorithms/numeric",
        "file": "partial_sum_inv/partial_sum_inv.c"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../nonmutating/find",
            "-I../nonmutating/find2",
            "-I../nonmutating/find3",
            "-I../nonmutating/find4",
            "-I../nonmutating/find5",
            "-I../nonmutating/find_if_not",
            "-I../nonmutating/find_first_of",
            "-I../nonmutating/adjacent_find",
            "-I../nonmutating/mismatch",
            "-I../nonmutating/equal",
            "-I../nonmutating/search",
            "-I../nonmutating/search_n",
            "-I../nonmutating/find_end",
            "-I../nonmutating/count",
            "-I../nonmutating/count2",
            "-I../nonmutating/find3",
            "-I../nonmutating/find2",
            "-I../nonmutating/find2",
            "-I../nonmutating/mismatch",
            "-I../nonmutating/equal",
            "-I../nonmutating/equal",
            "-o",
            "find/find.o",
            "find/find.c"
        ],
        "directory": "StandardAlgorithms/nonmutating",
        "file": "find/find.c"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-I../../nonmutating/find2",
            "-o",
            "find_first_of_test.o",
            "find_first_of_test.cpp"
        ],
        "directory": "StandardAlgorithms/nonmutating/find_first_of",
        "file": "find_first_of_test.cpp"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../numeric/iota",
            "-I../numeric/accumulate",
            "-I../numeric/inner_product",
            "-I../numeric/partial_sum",
            "-I../numeric/adjacent_difference",
            "-I../numeric/partial_sum_inv",
            "-I../numeric/adjacent_difference_inv",
            "-I../numeric/partial_sum",
            "-I../numeric/adjacent_difference",
            "-I../numeric/partial_sum",
            "-I../numeric/adjacent_difference",
            "-o",
            "iota/iota.o",
            "iota/iota.c"
        ],
        "directory": "StandardAlgorithms/numeric",
        "file": "iota/iota.c"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-I../../stack/stack_push",
            "-o",
            "stack_push_wd_test.o",
            "stack_push_wd_test.cpp"
        ],
        "directory": "StandardAlgorithms/stack_wd/stack_push_wd",
        "file": "stack_push_wd_test.cpp"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-I../../heap/push_heap",
            "-I../../heap/is_heap",
            "-o",
            "make_heap_test.o",
            "make_heap_test.cpp"
        ],
        "directory": "StandardAlgorithms/heap/make_heap",
        "file": "make_heap_test.cpp"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-o",
            "lower_bound_test.o",
            "lower_bound_test.cpp"
        ],
        "directory": "StandardAlgorithms/binarysearch/lower_bound",
        "file": "lower_bound_test.cpp"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-I../../numeric/partial_sum",
            "-I../../numeric/adjacent_difference",
            "-o",
            "adjacent_difference_inv_test.o",
            "adjacent_difference_inv_test.cpp"
        ],
        "directory": "StandardAlgorithms/numeric/adjacent_difference_inv",
        "file": "adjacent_difference_inv_test.cpp"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-I../../mutating/swap",
            "-I../../heap/pop_heap",
            "-I../../heap/push_heap",
            "-I../../heap/make_heap",
            "-I../../heap/sort_heap",
            "-o",
            "partial_sort_test.o",
            "partial_sort_test.cpp"
        ],
        "directory": "StandardAlgorithms/sorting/partial_sort",
        "file": "partial_sort_test.cpp"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../nonmutating/find",
            "-I../nonmutating/find2",
            "-I../nonmutating/find3",
            "-I../nonmutating/find4",
            "-I../nonmutating/find5",
            "-I../nonmutating/find_if_not",
            "-I../nonmutating/find_first_of",
            "-I../nonmutating/adjacent_find",
            "-I../nonmutating/mismatch",
            "-I../nonmutating/equal",
            "-I../nonmutating/search",
            "-I../nonmutating/search_n",
            "-I../nonmutating/find_end",
            "-I../nonmutating/count",
            "-I../nonmutating/count2",
            "-I../nonmutating/find3",
            "-I../nonmutating/find2",
            "-I../nonmutating/find2",
            "-I../nonmutating/mismatch",
            "-I../nonmutating/equal",
            "-I../nonmutating/equal",
            "-o",
            "search/search.o",
            "search/search.c"
        ],
        "directory": "StandardAlgorithms/nonmutating",
        "file": "search/search.c"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../nonmutating/find",
            "-I../nonmutating/find2",
            "-I../nonmutating/find3",
            "-I../nonmutating/find4",
            "-I../nonmutating/find5",
            "-I../nonmutating/find_if_not",
            "-I../nonmutating/find_first_of",
            "-I../nonmutating/adjacent_find",
            "-I../nonmutating/mismatch",
            "-I../nonmutating/equal",
            "-I../nonmutating/search",
            "-I../nonmutating/search_n",
            "-I../nonmutating/find_end",
            "-I../nonmutating/count",
            "-I../nonmutating/count2",
            "-I../nonmutating/find3",
            "-I../nonmutating/find2",
            "-I../nonmutating/find2",
            "-I../nonmutating/mismatch",
            "-I../nonmutating/equal",
            "-I../nonmutating/equal",
            "-o",
            "find_first_of/find_first_of.o",
            "find_first_of/find_first_of.c"
        ],
        "directory": "StandardAlgorithms/nonmutating",
        "file": "find_first_of/find_first_of.c"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-I../../nonmutating/equal",
            "-o",
            "search_test.o",
            "search_test.cpp"
        ],
        "directory": "StandardAlgorithms/nonmutating/search",
        "file": "search_test.cpp"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-o",
            "find3_test.o",
            "find3_test.cpp"
        ],
        "directory": "StandardAlgorithms/nonmutating/find3",
        "file": "find3_test.cpp"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../numeric/iota",
            "-I../numeric/accumulate",
            "-I../numeric/inner_product",
            "-I../numeric/partial_sum",
            "-I../numeric/adjacent_difference",
            "-I../numeric/partial_sum_inv",
            "-I../numeric/adjacent_difference_inv",
            "-I../numeric/partial_sum",
            "-I../numeric/adjacent_difference",
            "-I../numeric/partial_sum",
            "-I../numeric/adjacent_difference",
            "-o",
            "accumulate/accumulate.o",
            "accumulate/accumulate.c"
        ],
        "directory": "StandardAlgorithms/numeric",
        "file": "accumulate/accumulate.c"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../heap/heap_parent",
            "-I../heap/heap_child_max",
            "-I../heap/is_heap_until",
            "-I../heap/is_heap",
            "-I../heap/push_heap",
            "-I../heap/pop_heap",
            "-I../heap/make_heap",
            "-I../heap/sort_heap",
            "-I../heap/is_heap_until",
            "-I../heap/heap_parent",
            "-I../heap/is_heap",
            "-I../heap/heap_child_max",
            "-I../heap/is_heap",
            "-I../heap/push_heap",
            "-I../heap/is_heap",
            "-I../heap/pop_heap",
            "-I../heap/make_heap",
            "-o",
            "is_heap/is_heap.o",
            "is_heap/is_heap.c"
        ],
        "directory": "StandardAlgorithms/heap",
        "file": "is_heap/is_heap.c"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-o",
            "adjacent_difference_test.o",
            "adjacent_difference_test.cpp"
        ],
        "directory": "StandardAlgorithms/numeric/adjacent_difference",
        "file": "adjacent_difference_test.cpp"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../maxmin/clamp",
            "-I../maxmin/max_element",
            "-I../maxmin/max_element2",
            "-I../maxmin/max_seq",
            "-I../maxmin/min_element",
            "-I../maxmin/make_pair",
            "-I../maxmin/minmax_element",
            "-I../maxmin/max_element2",
            "-I../maxmin/make_pair",
            "-o",
            "max_element/max_element.o",
            "max_element/max_element.c"
        ],
        "directory": "StandardAlgorithms/maxmin",
        "file": "max_element/max_element.c"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-o",
            "remove_copy3_test.o",
            "remove_copy3_test.cpp"
        ],
        "directory": "StandardAlgorithms/mutating/remove_copy3",
        "file": "remove_copy3_test.cpp"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../nonmutating/find",
            "-I../nonmutating/find2",
            "-I../nonmutating/find3",
            "-I../nonmutating/find4",
            "-I../nonmutating/find5",
            "-I../nonmutating/find_if_not",
            "-I../nonmutating/find_first_of",
            "-I../nonmutating/adjacent_find",
            "-I../nonmutating/mismatch",
            "-I../nonmutating/equal",
            "-I../nonmutating/search",
            "-I../nonmutating/search_n",
            "-I../nonmutating/find_end",
            "-I../nonmutating/count",
            "-I../nonmutating/count2",
            "-I../nonmutating/find3",
            "-I../nonmutating/find2",
            "-I../nonmutating/find2",
            "-I../nonmutating/mismatch",
            "-I../nonmutating/equal",
            "-I../nonmutating/equal",
            "-o",
            "find5/find5.o",
            "find5/find5.c"
        ],
        "directory": "StandardAlgorithms/nonmutating",
        "file": "find5/find5.c"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-I../../mutating/swap",
            "-o",
            "reverse_test.o",
            "reverse_test.cpp"
        ],
        "directory": "StandardAlgorithms/mutating/reverse",
        "file": "reverse_test.cpp"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../binarysearch/lower_bound",
            "-I../binarysearch/upper_bound",
            "-I../binarysearch/equal_range",
            "-I../binarysearch/equal_range2",
            "-I../binarysearch/binary_search",
            "-I../binarysearch/binary_search2",
            "-I../binarysearch/lower_bound",
            "-I../binarysearch/upper_bound",
            "-I../maxmin/make_pair",
            "-I../binarysearch/lower_bound",
            "-I../binarysearch/upper_bound",
            "-I../maxmin/make_pair",
            "-I../binarysearch/lower_bound",
            "-I../binarysearch/lower_bound",
            "-o",
            "lower_bound/lower_bound.o",
            "lower_bound/lower_bound.c"
        ],
        "directory": "StandardAlgorithms/binarysearch",
        "file": "lower_bound/lower_bound.c"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-I../../maxmin/max_element2",
            "-o",
            "max_seq_test.o",
            "max_seq_test.cpp"
        ],
        "directory": "StandardAlgorithms/maxmin/max_seq",
        "file": "max_seq_test.cpp"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../stack_wd/stack_size_wd",
            "-I../stack_wd/stack_empty_wd",
            "-I../stack_wd/stack_top_wd",
            "-I../stack_wd/stack_push_wd",
            "-I../stack_wd/stack_pop_wd",
            "-I../stack/stack_size",
            "-I../stack/stack_empty",
            "-I../stack/stack_top",
            "-I../stack/stack_push",
            "-I../stack/stack_pop",
            "-o",
            "stack_top_wd/stack_top_wd.o",
            "stack_top_wd/stack_top_wd.c"
        ],
        "directory": "StandardAlgorithms/stack_wd",
        "file": "stack_top_wd/stack_top_wd.c"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-o",
            "remove_copy_test.o",
            "remove_copy_test.cpp"
        ],
        "directory": "StandardAlgorithms/mutating/remove_copy",
        "file": "remove_copy_test.cpp"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-I../../stack/stack_pop",
            "-I../../stack/stack_push",
            "-o",
            "axiom_pop_of_push_test.o",
            "axiom_pop_of_push_test.cpp"
        ],
        "directory": "StandardAlgorithms/stack_axiom/axiom_pop_of_push",
        "file": "axiom_pop_of_push_test.cpp"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-o",
            "max_element_test.o",
            "max_element_test.cpp"
        ],
        "directory": "StandardAlgorithms/maxmin/max_element",
        "file": "max_element_test.cpp"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-I../../stack/stack_push",
            "-I../../stack/stack_size",
            "-o",
            "axiom_size_of_push_test.o",
            "axiom_size_of_push_test.cpp"
        ],
        "directory": "StandardAlgorithms/stack_axiom/axiom_size_of_push",
        "file": "axiom_size_of_push_test.cpp"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../mutating/fill",
            "-I../mutating/swap",
            "-I../mutating/swap_ranges",
            "-I../mutating/copy",
            "-I../mutating/copy_backward",
            "-I../mutating/reverse_copy",
            "-I../mutating/reverse",
            "-I../mutating/rotate_copy",
            "-I../mutating/rotate",
            "-I../mutating/replace_copy",
            "-I../mutating/replace",
            "-I../mutating/remove_copy",
            "-I../mutating/remove_copy2",
            "-I../mutating/remove_copy3",
            "-I../mutating/remove",
            "-I../mutating/shuffle",
            "-I../mutating/random_number",
            "-I../mutating/swap",
            "-I../mutating/swap",
            "-I../mutating/copy",
            "-I../mutating/reverse",
            "-I../mutating/swap",
            "-I../mutating/random_number",
            "-o",
            "remove_copy3/remove_copy3.o",
            "remove_copy3/remove_copy3.c"
        ],
        "directory": "StandardAlgorithms/mutating",
        "file": "remove_copy3/remove_copy3.c"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../maxmin/clamp",
            "-I../maxmin/max_element",
            "-I../maxmin/max_element2",
            "-I../maxmin/max_seq",
            "-I../maxmin/min_element",
            "-I../maxmin/make_pair",
            "-I../maxmin/minmax_element",
            "-I../maxmin/max_element2",
            "-I../maxmin/make_pair",
            "-o",
            "minmax_element/minmax_element.o",
            "minmax_element/minmax_element.c"
        ],
        "directory": "StandardAlgorithms/maxmin",
        "file": "minmax_element/minmax_element.c"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-o",
            "heap_child_max_test.o",
            "heap_child_max_test.cpp"
        ],
        "directory": "StandardAlgorithms/heap/heap_child_max",
        "file": "heap_child_max_test.cpp"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../stack/stack_equal",
            "-I../stack/stack_init",
            "-I../stack/stack_size",
            "-I../stack/stack_full",
            "-I../stack/stack_empty",
            "-I../stack/stack_top",
            "-I../stack/stack_push",
            "-I../stack/stack_pop",
            "-I../nonmutating/equal",
            "-I../stack/stack_init",
            "-I../stack/stack_init",
            "-I../stack/stack_init",
            "-I../stack/stack_size",
            "-I../stack/stack_init",
            "-I../stack/stack_size",
            "-I../stack/stack_empty",
            "-I../stack/stack_init",
            "-I../stack/stack_init",
            "-I../stack/stack_empty",
            "-I../stack/stack_full",
            "-I../stack/stack_push",
            "-I../stack/stack_init",
            "-I../stack/stack_empty",
            "-o",
            "stack_pop/stack_pop.o",
            "stack_pop/stack_pop.c"
        ],
        "directory": "StandardAlgorithms/stack",
        "file": "stack_pop/stack_pop.c"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../mutating/fill",
            "-I../mutating/swap",
            "-I../mutating/swap_ranges",
            "-I../mutating/copy",
            "-I../mutating/copy_backward",
            "-I../mutating/reverse_copy",
            "-I../mutating/reverse",
            "-I../mutating/rotate_copy",
            "-I../mutating/rotate",
            "-I../mutating/replace_copy",
            "-I../mutating/replace",
            "-I../mutating/remove_copy",
            "-I../mutating/remove_copy2",
            "-I../mutating/remove_copy3",
            "-I../mutating/remove",
            "-I../mutating/shuffle",
            "-I../mutating/random_number",
            "-I../mutating/swap",
            "-I../mutating/swap",
            "-I../mutating/copy",
            "-I../mutating/reverse",
            "-I../mutating/swap",
            "-I../mutating/random_number",
            "-o",
            "replace_copy/replace_copy.o",
            "replace_copy/replace_copy.c"
        ],
        "directory": "StandardAlgorithms/mutating",
        "file": "replace_copy/replace_copy.c"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../stack_axiom/axiom_size_of_init",
            "-I../stack_axiom/axiom_size_of_push",
            "-I../stack_axiom/axiom_top_of_push",
            "-I../stack_axiom/axiom_size_of_pop",
            "-I../stack_axiom/axiom_pop_of_push",
            "-I../stack_axiom/axiom_push_of_pop_top",
            "-I../stack/stack_init",
            "-I../stack/stack_size",
            "-I../stack/stack_push",
            "-I../stack/stack_size",
            "-I../stack/stack_top",
            "-I../stack/stack_push",
            "-I../stack/stack_pop",
            "-I../stack/stack_size",
            "-I../stack/stack_pop",
            "-I../stack/stack_push",
            "-I../stack/stack_pop",
            "-I../stack/stack_push",
            "-I../stack/stack_top",
            "-o",
            "axiom_pop_of_push/axiom_pop_of_push.o",
            "axiom_pop_of_push/axiom_pop_of_push.c"
        ],
        "directory": "StandardAlgorithms/stack_axiom",
        "file": "axiom_pop_of_push/axiom_pop_of_push.c"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-o",
            "is_sorted_test.o",
            "is_sorted_test.cpp"
        ],
        "directory": "StandardAlgorithms/sorting/is_sorted",
        "file": "is_sorted_test.cpp"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../nonmutating/find",
            "-I../nonmutating/find2",
            "-I../nonmutating/find3",
            "-I../nonmutating/find4",
            "-I../nonmutating/find5",
            "-I../nonmutating/find_if_not",
            "-I../nonmutating/find_first_of",
            "-I../nonmutating/adjacent_find",
            "-I../nonmutating/mismatch",
            "-I../nonmutating/equal",
            "-I../nonmutating/search",
            "-I../nonmutating/search_n",
            "-I../nonmutating/find_end",
            "-I../nonmutating/count",
            "-I../nonmutating/count2",
            "-I../nonmutating/find3",
            "-I../nonmutating/find2",
            "-I../nonmutating/find2",
            "-I../nonmutating/mismatch",
            "-I../nonmutating/equal",
            "-I../nonmutating/equal",
            "-o",
            "count/count.o",
            "count/count.c"
        ],
        "directory": "StandardAlgorithms/nonmutating",
        "file": "count/count.c"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-o",
            "adjacent_find_test.o",
            "adjacent_find_test.cpp"
        ],
        "directory": "StandardAlgorithms/nonmutating/adjacent_find",
        "file": "adjacent_find_test.cpp"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-o",
            "reverse_copy_test.o",
            "reverse_copy_test.cpp"
        ],
        "directory": "StandardAlgorithms/mutating/reverse_copy",
        "file": "reverse_copy_test.cpp"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../mutating/fill",
            "-I../mutating/swap",
            "-I../mutating/swap_ranges",
            "-I../mutating/copy",
            "-I../mutating/copy_backward",
            "-I../mutating/reverse_copy",
            "-I../mutating/reverse",
            "-I../mutating/rotate_copy",
            "-I../mutating/rotate",
            "-I../mutating/replace_copy",
            "-I../mutating/replace",
            "-I../mutating/remove_copy",
            "-I../mutating/remove_copy2",
            "-I../mutating/remove_copy3",
            "-I../mutating/remove",
            "-I../mutating/shuffle",
            "-I../mutating/random_number",
            "-I../mutating/swap",
            "-I../mutating/swap",
            "-I../mutating/copy",
            "-I../mutating/reverse",
            "-I../mutating/swap",
            "-I../mutating/random_number",
            "-o",
            "swap_ranges/swap_ranges.o",
            "swap_ranges/swap_ranges.c"
        ],
        "directory": "StandardAlgorithms/mutating",
        "file": "swap_ranges/swap_ranges.c"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../nonmutating/find",
            "-I../nonmutating/find2",
            "-I../nonmutating/find3",
            "-I../nonmutating/find4",
            "-I../nonmutating/find5",
            "-I../nonmutating/find_if_not",
            "-I../nonmutating/find_first_of",
            "-I../nonmutating/adjacent_find",
            "-I../nonmutating/mismatch",
            "-I../nonmutating/equal",
            "-I../nonmutating/search",
            "-I../nonmutating/search_n",
            "-I../nonmutating/find_end",
            "-I../nonmutating/count",
            "-I../nonmutating/count2",
            "-I../nonmutating/find3",
            "-I../nonmutating/find2",
            "-I../nonmutating/find2",
            "-I../nonmutating/mismatch",
            "-I../nonmutating/equal",
            "-I../nonmutating/equal",
            "-o",
            "mismatch/mismatch.o",
            "mismatch/mismatch.c"
        ],
        "directory": "StandardAlgorithms/nonmutating",
        "file": "mismatch/mismatch.c"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-o",
            "random_number_test.o",
            "random_number_test.cpp"
        ],
        "directory": "StandardAlgorithms/mutating/random_number",
        "file": "random_number_test.cpp"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-I../../mutating/swap",
            "-I../../mutating/random_number",
            "-o",
            "shuffle_test.o",
            "shuffle_test.cpp"
        ],
        "directory": "StandardAlgorithms/mutating/shuffle",
        "file": "shuffle_test.cpp"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../binarysearch/lower_bound",
            "-I../binarysearch/upper_bound",
            "-I../binarysearch/equal_range",
            "-I../binarysearch/equal_range2",
            "-I../binarysearch/binary_search",
            "-I../binarysearch/binary_search2",
            "-I../binarysearch/lower_bound",
            "-I../binarysearch/upper_bound",
            "-I../maxmin/make_pair",
            "-I../binarysearch/lower_bound",
            "-I../binarysearch/upper_bound",
            "-I../maxmin/make_pair",
            "-I../binarysearch/lower_bound",
            "-I../binarysearch/lower_bound",
            "-o",
            "upper_bound/upper_bound.o",
            "upper_bound/upper_bound.c"
        ],
        "directory": "StandardAlgorithms/binarysearch",
        "file": "upper_bound/upper_bound.c"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-o",
            "remove_copy2_test.o",
            "remove_copy2_test.cpp"
        ],
        "directory": "StandardAlgorithms/mutating/remove_copy2",
        "file": "remove_copy2_test.cpp"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-I../../stack/stack_top",
            "-I../../stack/stack_push",
            "-o",
            "axiom_top_of_push_test.o",
            "axiom_top_of_push_test.cpp"
        ],
        "directory": "StandardAlgorithms/stack_axiom/axiom_top_of_push",
        "file": "axiom_top_of_push_test.cpp"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../mutating/fill",
            "-I../mutating/swap",
            "-I../mutating/swap_ranges",
            "-I../mutating/copy",
            "-I../mutating/copy_backward",
            "-I../mutating/reverse_copy",
            "-I../mutating/reverse",
            "-I../mutating/rotate_copy",
            "-I../mutating/rotate",
            "-I../mutating/replace_copy",
            "-I../mutating/replace",
            "-I../mutating/remove_copy",
            "-I../mutating/remove_copy2",
            "-I../mutating/remove_copy3",
            "-I../mutating/remove",
            "-I../mutating/shuffle",
            "-I../mutating/random_number",
            "-I../mutating/swap",
            "-I../mutating/swap",
            "-I../mutating/copy",
            "-I../mutating/reverse",
            "-I../mutating/swap",
            "-I../mutating/random_number",
            "-o",
            "copy/copy.o",
            "copy/copy.c"
        ],
        "directory": "StandardAlgorithms/mutating",
        "file": "copy/copy.c"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-I../../stack/stack_init",
            "-I../../stack/stack_empty",
            "-I../../stack/stack_full",
            "-o",
            "stack_push_test.o",
            "stack_push_test.cpp"
        ],
        "directory": "StandardAlgorithms/stack/stack_push",
        "file": "stack_push_test.cpp"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-I../../stack/stack_empty",
            "-I../../stack/stack_init",
            "-o",
            "stack_top_test.o",
            "stack_top_test.cpp"
        ],
        "directory": "StandardAlgorithms/stack/stack_top",
        "file": "stack_top_test.cpp"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../nonmutating/find",
            "-I../nonmutating/find2",
            "-I../nonmutating/find3",
            "-I../nonmutating/find4",
            "-I../nonmutating/find5",
            "-I../nonmutating/find_if_not",
            "-I../nonmutating/find_first_of",
            "-I../nonmutating/adjacent_find",
            "-I../nonmutating/mismatch",
            "-I../nonmutating/equal",
            "-I../nonmutating/search",
            "-I../nonmutating/search_n",
            "-I../nonmutating/find_end",
            "-I../nonmutating/count",
            "-I../nonmutating/count2",
            "-I../nonmutating/find3",
            "-I../nonmutating/find2",
            "-I../nonmutating/find2",
            "-I../nonmutating/mismatch",
            "-I../nonmutating/equal",
            "-I../nonmutating/equal",
            "-o",
            "find3/find3.o",
            "find3/find3.c"
        ],
        "directory": "StandardAlgorithms/nonmutating",
        "file": "find3/find3.c"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-I../../binarysearch/upper_bound",
            "-I../../mutating/rotate",
            "-o",
            "insertion_sort_test.o",
            "insertion_sort_test.cpp"
        ],
        "directory": "StandardAlgorithms/sorting/insertion_sort",
        "file": "insertion_sort_test.cpp"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../maxmin/clamp",
            "-I../maxmin/max_element",
            "-I../maxmin/max_element2",
            "-I../maxmin/max_seq",
            "-I../maxmin/min_element",
            "-I../maxmin/make_pair",
            "-I../maxmin/minmax_element",
            "-I../maxmin/max_element2",
            "-I../maxmin/make_pair",
            "-o",
            "max_seq/max_seq.o",
            "max_seq/max_seq.c"
        ],
        "directory": "StandardAlgorithms/maxmin",
        "file": "max_seq/max_seq.c"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../numeric/iota",
            "-I../numeric/accumulate",
            "-I../numeric/inner_product",
            "-I../numeric/partial_sum",
            "-I../numeric/adjacent_difference",
            "-I../numeric/partial_sum_inv",
            "-I../numeric/adjacent_difference_inv",
            "-I../numeric/partial_sum",
            "-I../numeric/adjacent_difference",
            "-I../numeric/partial_sum",
            "-I../numeric/adjacent_difference",
            "-o",
            "inner_product/inner_product.o",
            "inner_product/inner_product.c"
        ],
        "directory": "StandardAlgorithms/numeric",
        "file": "inner_product/inner_product.c"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../heap/heap_parent",
            "-I../heap/heap_child_max",
            "-I../heap/is_heap_until",
            "-I../heap/is_heap",
            "-I../heap/push_heap",
            "-I../heap/pop_heap",
            "-I../heap/make_heap",
            "-I../heap/sort_heap",
            "-I../heap/is_heap_until",
            "-I../heap/heap_parent",
            "-I../heap/is_heap",
            "-I../heap/heap_child_max",
            "-I../heap/is_heap",
            "-I../heap/push_heap",
            "-I../heap/is_heap",
            "-I../heap/pop_heap",
            "-I../heap/make_heap",
            "-o",
            "pop_heap/pop_heap.o",
            "pop_heap/pop_heap.c"
        ],
        "directory": "StandardAlgorithms/heap",
        "file": "pop_heap/pop_heap.c"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../stack_axiom/axiom_size_of_init",
            "-I../stack_axiom/axiom_size_of_push",
            "-I../stack_axiom/axiom_top_of_push",
            "-I../stack_axiom/axiom_size_of_pop",
            "-I../stack_axiom/axiom_pop_of_push",
            "-I../stack_axiom/axiom_push_of_pop_top",
            "-I../stack/stack_init",
            "-I../stack/stack_size",
            "-I../stack/stack_push",
            "-I../stack/stack_size",
            "-I../stack/stack_top",
            "-I../stack/stack_push",
            "-I../stack/stack_pop",
            "-I../stack/stack_size",
            "-I../stack/stack_pop",
            "-I../stack/stack_push",
            "-I../stack/stack_pop",
            "-I../stack/stack_push",
            "-I../stack/stack_top",
            "-o",
            "axiom_size_of_push/axiom_size_of_push.o",
            "axiom_size_of_push/axiom_size_of_push.c"
        ],
        "directory": "StandardAlgorithms/stack_axiom",
        "file": "axiom_size_of_push/axiom_size_of_push.c"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../stack/stack_equal",
            "-I../stack/stack_init",
            "-I../stack/stack_size",
            "-I../stack/stack_full",
            "-I../stack/stack_empty",
            "-I../stack/stack_top",
            "-I../stack/stack_push",
            "-I../stack/stack_pop",
            "-I../nonmutating/equal",
            "-I../stack/stack_init",
            "-I../stack/stack_init",
            "-I../stack/stack_init",
            "-I../stack/stack_size",
            "-I../stack/stack_init",
            "-I../stack/stack_size",
            "-I../stack/stack_empty",
            "-I../stack/stack_init",
            "-I../stack/stack_init",
            "-I../stack/stack_empty",
            "-I../stack/stack_full",
            "-I../stack/stack_push",
            "-I../stack/stack_init",
            "-I../stack/stack_empty",
            "-o",
            "stack_init/stack_init.o",
            "stack_init/stack_init.c"
        ],
        "directory": "StandardAlgorithms/stack",
        "file": "stack_init/stack_init.c"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../nonmutating/find",
            "-I../nonmutating/find2",
            "-I../nonmutating/find3",
            "-I../nonmutating/find4",
            "-I../nonmutating/find5",
            "-I../nonmutating/find_if_not",
            "-I../nonmutating/find_first_of",
            "-I../nonmutating/adjacent_find",
            "-I../nonmutating/mismatch",
            "-I../nonmutating/equal",
            "-I../nonmutating/search",
            "-I../nonmutating/search_n",
            "-I../nonmutating/find_end",
            "-I../nonmutating/count",
            "-I../nonmutating/count2",
            "-I../nonmutating/find3",
            "-I../nonmutating/find2",
            "-I../nonmutating/find2",
            "-I../nonmutating/mismatch",
            "-I../nonmutating/equal",
            "-I../nonmutating/equal",
            "-o",
            "adjacent_find/adjacent_find.o",
            "adjacent_find/adjacent_find.c"
        ],
        "directory": "StandardAlgorithms/nonmutating",
        "file": "adjacent_find/adjacent_find.c"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../binarysearch/lower_bound",
            "-I../binarysearch/upper_bound",
            "-I../binarysearch/equal_range",
            "-I../binarysearch/equal_range2",
            "-I../binarysearch/binary_search",
            "-I../binarysearch/binary_search2",
            "-I../binarysearch/lower_bound",
            "-I../binarysearch/upper_bound",
            "-I../maxmin/make_pair",
            "-I../binarysearch/lower_bound",
            "-I../binarysearch/upper_bound",
            "-I../maxmin/make_pair",
            "-I../binarysearch/lower_bound",
            "-I../binarysearch/lower_bound",
            "-o",
            "binary_search/binary_search.o",
            "binary_search/binary_search.c"
        ],
        "directory": "StandardAlgorithms/binarysearch",
        "file": "binary_search/binary_search.c"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-I../../stack/stack_init",
            "-I../../stack/stack_size",
            "-o",
            "stack_full_test.o",
            "stack_full_test.cpp"
        ],
        "directory": "StandardAlgorithms/stack/stack_full",
        "file": "stack_full_test.cpp"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-I../../mutating/copy",
            "-o",
            "rotate_copy_test.o",
            "rotate_copy_test.cpp"
        ],
        "directory": "StandardAlgorithms/mutating/rotate_copy",
        "file": "rotate_copy_test.cpp"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../stack_axiom/axiom_size_of_init",
            "-I../stack_axiom/axiom_size_of_push",
            "-I../stack_axiom/axiom_top_of_push",
            "-I../stack_axiom/axiom_size_of_pop",
            "-I../stack_axiom/axiom_pop_of_push",
            "-I../stack_axiom/axiom_push_of_pop_top",
            "-I../stack/stack_init",
            "-I../stack/stack_size",
            "-I../stack/stack_push",
            "-I../stack/stack_size",
            "-I../stack/stack_top",
            "-I../stack/stack_push",
            "-I../stack/stack_pop",
            "-I../stack/stack_size",
            "-I../stack/stack_pop",
            "-I../stack/stack_push",
            "-I../stack/stack_pop",
            "-I../stack/stack_push",
            "-I../stack/stack_top",
            "-o",
            "axiom_size_of_init/axiom_size_of_init.o",
            "axiom_size_of_init/axiom_size_of_init.c"
        ],
        "directory": "StandardAlgorithms/stack_axiom",
        "file": "axiom_size_of_init/axiom_size_of_init.c"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../numeric/iota",
            "-I../numeric/accumulate",
            "-I../numeric/inner_product",
            "-I../numeric/partial_sum",
            "-I../numeric/adjacent_difference",
            "-I../numeric/partial_sum_inv",
            "-I../numeric/adjacent_difference_inv",
            "-I../numeric/partial_sum",
            "-I../numeric/adjacent_difference",
            "-I../numeric/partial_sum",
            "-I../numeric/adjacent_difference",
            "-o",
            "partial_sum/partial_sum.o",
            "partial_sum/partial_sum.c"
        ],
        "directory": "StandardAlgorithms/numeric",
        "file": "partial_sum/partial_sum.c"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../sorting/is_sorted",
            "-I../sorting/partial_sort",
            "-I../sorting/bubble_sort",
            "-I../sorting/selection_sort",
            "-I../sorting/insertion_sort",
            "-I../sorting/heap_sort",
            "-I../sorting/merge",
            "-I../mutating/swap",
            "-I../heap/pop_heap",
            "-I../heap/push_heap",
            "-I../heap/make_heap",
            "-I../heap/sort_heap",
            "-I../mutating/swap",
            "-I../mutating/swap",
            "-I../maxmin/min_element",
            "-I../binarysearch/upper_bound",
            "-I../mutating/rotate",
            "-I../heap/make_heap",
            "-I../heap/sort_heap",
            "-I../mutating/copy",
            "-o",
            "bubble_sort/bubble_sort.o",
            "bubble_sort/bubble_sort.c"
        ],
        "directory": "StandardAlgorithms/sorting",
        "file": "bubble_sort/bubble_sort.c"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../stack/stack_equal",
            "-I../stack/stack_init",
            "-I../stack/stack_size",
            "-I../stack/stack_full",
            "-I../stack/stack_empty",
            "-I../stack/stack_top",
            "-I../stack/stack_push",
            "-I../stack/stack_pop",
            "-I../nonmutating/equal",
            "-I../stack/stack_init",
            "-I../stack/stack_init",
            "-I../stack/stack_init",
            "-I../stack/stack_size",
            "-I../stack/stack_init",
            "-I../stack/stack_size",
            "-I../stack/stack_empty",
            "-I../stack/stack_init",
            "-I../stack/stack_init",
            "-I../stack/stack_empty",
            "-I../stack/stack_full",
            "-I../stack/stack_push",
            "-I../stack/stack_init",
            "-I../stack/stack_empty",
            "-o",
            "stack_equal/stack_equal.o",
            "stack_equal/stack_equal.c"
        ],
        "directory": "StandardAlgorithms/stack",
        "file": "stack_equal/stack_equal.c"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../sorting/is_sorted",
            "-I../sorting/partial_sort",
            "-I../sorting/bubble_sort",
            "-I../sorting/selection_sort",
            "-I../sorting/insertion_sort",
            "-I../sorting/heap_sort",
            "-I../sorting/merge",
            "-I../mutating/swap",
            "-I../heap/pop_heap",
            "-I../heap/push_heap",
            "-I../heap/make_heap",
            "-I../heap/sort_heap",
            "-I../mutating/swap",
            "-I../mutating/swap",
            "-I../maxmin/min_element",
            "-I../binarysearch/upper_bound",
            "-I../mutating/rotate",
            "-I../heap/make_heap",
            "-I../heap/sort_heap",
            "-I../mutating/copy",
            "-o",
            "is_sorted/is_sorted.o",
            "is_sorted/is_sorted.c"
        ],
        "directory": "StandardAlgorithms/sorting",
        "file": "is_sorted/is_sorted.c"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../stack_wd/stack_size_wd",
            "-I../stack_wd/stack_empty_wd",
            "-I../stack_wd/stack_top_wd",
            "-I../stack_wd/stack_push_wd",
            "-I../stack_wd/stack_pop_wd",
            "-I../stack/stack_size",
            "-I../stack/stack_empty",
            "-I../stack/stack_top",
            "-I../stack/stack_push",
            "-I../stack/stack_pop",
            "-o",
            "stack_pop_wd/stack_pop_wd.o",
            "stack_pop_wd/stack_pop_wd.c"
        ],
        "directory": "StandardAlgorithms/stack_wd",
        "file": "stack_pop_wd/stack_pop_wd.c"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-I../../stack/stack_pop",
            "-o",
            "stack_pop_wd_test.o",
            "stack_pop_wd_test.cpp"
        ],
        "directory": "StandardAlgorithms/stack_wd/stack_pop_wd",
        "file": "stack_pop_wd_test.cpp"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../mutating/fill",
            "-I../mutating/swap",
            "-I../mutating/swap_ranges",
            "-I../mutating/copy",
            "-I../mutating/copy_backward",
            "-I../mutating/reverse_copy",
            "-I../mutating/reverse",
            "-I../mutating/rotate_copy",
            "-I../mutating/rotate",
            "-I../mutating/replace_copy",
            "-I../mutating/replace",
            "-I../mutating/remove_copy",
            "-I../mutating/remove_copy2",
            "-I../mutating/remove_copy3",
            "-I../mutating/remove",
            "-I../mutating/shuffle",
            "-I../mutating/random_number",
            "-I../mutating/swap",
            "-I../mutating/swap",
            "-I../mutating/copy",
            "-I../mutating/reverse",
            "-I../mutating/swap",
            "-I../mutating/random_number",
            "-o",
            "reverse/reverse.o",
            "reverse/reverse.c"
        ],
        "directory": "StandardAlgorithms/mutating",
        "file": "reverse/reverse.c"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../stack_wd/stack_size_wd",
            "-I../stack_wd/stack_empty_wd",
            "-I../stack_wd/stack_top_wd",
            "-I../stack_wd/stack_push_wd",
            "-I../stack_wd/stack_pop_wd",
            "-I../stack/stack_size",
            "-I../stack/stack_empty",
            "-I../stack/stack_top",
            "-I../stack/stack_push",
            "-I../stack/stack_pop",
            "-o",
            "stack_size_wd/stack_size_wd.o",
            "stack_size_wd/stack_size_wd.c"
        ],
        "directory": "StandardAlgorithms/stack_wd",
        "file": "stack_size_wd/stack_size_wd.c"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-I../../mutating/reverse",
            "-o",
            "rotate_test.o",
            "rotate_test.cpp"
        ],
        "directory": "StandardAlgorithms/mutating/rotate",
        "file": "rotate_test.cpp"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../stack_wd/stack_size_wd",
            "-I../stack_wd/stack_empty_wd",
            "-I../stack_wd/stack_top_wd",
            "-I../stack_wd/stack_push_wd",
            "-I../stack_wd/stack_pop_wd",
            "-I../stack/stack_size",
            "-I../stack/stack_empty",
            "-I../stack/stack_top",
            "-I../stack/stack_push",
            "-I../stack/stack_pop",
            "-o",
            "stack_push_wd/stack_push_wd.o",
            "stack_push_wd/stack_push_wd.c"
        ],
        "directory": "StandardAlgorithms/stack_wd",
        "file": "stack_push_wd/stack_push_wd.c"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-I../../stack/stack_push",
            "-I../../stack/stack_init",
            "-I../../stack/stack_empty",
            "-o",
            "stack_pop_test.o",
            "stack_pop_test.cpp"
        ],
        "directory": "StandardAlgorithms/stack/stack_pop",
        "file": "stack_pop_test.cpp"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-o",
            "make_pair_test.o",
            "make_pair_test.cpp"
        ],
        "directory": "StandardAlgorithms/maxmin/make_pair",
        "file": "make_pair_test.cpp"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-o",
            "mismatch_test.o",
            "mismatch_test.cpp"
        ],
        "directory": "StandardAlgorithms/nonmutating/mismatch",
        "file": "mismatch_test.cpp"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../mutating/fill",
            "-I../mutating/swap",
            "-I../mutating/swap_ranges",
            "-I../mutating/copy",
            "-I../mutating/copy_backward",
            "-I../mutating/reverse_copy",
            "-I../mutating/reverse",
            "-I../mutating/rotate_copy",
            "-I../mutating/rotate",
            "-I../mutating/replace_copy",
            "-I../mutating/replace",
            "-I../mutating/remove_copy",
            "-I../mutating/remove_copy2",
            "-I../mutating/remove_copy3",
            "-I../mutating/remove",
            "-I../mutating/shuffle",
            "-I../mutating/random_number",
            "-I../mutating/swap",
            "-I../mutating/swap",
            "-I../mutating/copy",
            "-I../mutating/reverse",
            "-I../mutating/swap",
            "-I../mutating/random_number",
            "-o",
            "swap/swap.o",
            "swap/swap.c"
        ],
        "directory": "StandardAlgorithms/mutating",
        "file": "swap/swap.c"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../stack/stack_equal",
            "-I../stack/stack_init",
            "-I../stack/stack_size",
            "-I../stack/stack_full",
            "-I../stack/stack_empty",
            "-I../stack/stack_top",
            "-I../stack/stack_push",
            "-I../stack/stack_pop",
            "-I../nonmutating/equal",
            "-I../stack/stack_init",
            "-I../stack/stack_init",
            "-I../stack/stack_init",
            "-I../stack/stack_size",
            "-I../stack/stack_init",
            "-I../stack/stack_size",
            "-I../stack/stack_empty",
            "-I../stack/stack_init",
            "-I../stack/stack_init",
            "-I../stack/stack_empty",
            "-I../stack/stack_full",
            "-I../stack/stack_push",
            "-I../stack/stack_init",
            "-I../stack/stack_empty",
            "-o",
            "stack_top/stack_top.o",
            "stack_top/stack_top.c"
        ],
        "directory": "StandardAlgorithms/stack",
        "file": "stack_top/stack_top.c"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../nonmutating/find",
            "-I../nonmutating/find2",
            "-I../nonmutating/find3",
            "-I../nonmutating/find4",
            "-I../nonmutating/find5",
            "-I../nonmutating/find_if_not",
            "-I../nonmutating/find_first_of",
            "-I../nonmutating/adjacent_find",
            "-I../nonmutating/mismatch",
            "-I../nonmutating/equal",
            "-I../nonmutating/search",
            "-I../nonmutating/search_n",
            "-I../nonmutating/find_end",
            "-I../nonmutating/count",
            "-I../nonmutating/count2",
            "-I../nonmutating/find3",
            "-I../nonmutating/find2",
            "-I../nonmutating/find2",
            "-I../nonmutating/mismatch",
            "-I../nonmutating/equal",
            "-I../nonmutating/equal",
            "-o",
            "find4/find4.o",
            "find4/find4.c"
        ],
        "directory": "StandardAlgorithms/nonmutating",
        "file": "find4/find4.c"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-o",
            "find_test.o",
            "find_test.cpp"
        ],
        "directory": "StandardAlgorithms/nonmutating/find",
        "file": "find_test.cpp"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../stack/stack_equal",
            "-I../stack/stack_init",
            "-I../stack/stack_size",
            "-I../stack/stack_full",
            "-I../stack/stack_empty",
            "-I../stack/stack_top",
            "-I../stack/stack_push",
            "-I../stack/stack_pop",
            "-I../nonmutating/equal",
            "-I../stack/stack_init",
            "-I../stack/stack_init",
            "-I../stack/stack_init",
            "-I../stack/stack_size",
            "-I../stack/stack_init",
            "-I../stack/stack_size",
            "-I../stack/stack_empty",
            "-I../stack/stack_init",
            "-I../stack/stack_init",
            "-I../stack/stack_empty",
            "-I../stack/stack_full",
            "-I../stack/stack_push",
            "-I../stack/stack_init",
            "-I../stack/stack_empty",
            "-o",
            "stack_empty/stack_empty.o",
            "stack_empty/stack_empty.c"
        ],
        "directory": "StandardAlgorithms/stack",
        "file": "stack_empty/stack_empty.c"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-o",
            "copy_backward_test.o",
            "copy_backward_test.cpp"
        ],
        "directory": "StandardAlgorithms/mutating/copy_backward",
        "file": "copy_backward_test.cpp"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-I../../heap/is_heap_until",
            "-o",
            "is_heap_test.o",
            "is_heap_test.cpp"
        ],
        "directory": "StandardAlgorithms/heap/is_heap",
        "file": "is_heap_test.cpp"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../sorting/is_sorted",
            "-I../sorting/partial_sort",
            "-I../sorting/bubble_sort",
            "-I../sorting/selection_sort",
            "-I../sorting/insertion_sort",
            "-I../sorting/heap_sort",
            "-I../sorting/merge",
            "-I../mutating/swap",
            "-I../heap/pop_heap",
            "-I../heap/push_heap",
            "-I../heap/make_heap",
            "-I../heap/sort_heap",
            "-I../mutating/swap",
            "-I../mutating/swap",
            "-I../maxmin/min_element",
            "-I../binarysearch/upper_bound",
            "-I../mutating/rotate",
            "-I../heap/make_heap",
            "-I../heap/sort_heap",
            "-I../mutating/copy",
            "-o",
            "selection_sort/selection_sort.o",
            "selection_sort/selection_sort.c"
        ],
        "directory": "StandardAlgorithms/sorting",
        "file": "selection_sort/selection_sort.c"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../mutating/fill",
            "-I../mutating/swap",
            "-I../mutating/swap_ranges",
            "-I../mutating/copy",
            "-I../mutating/copy_backward",
            "-I../mutating/reverse_copy",
            "-I../mutating/reverse",
            "-I../mutating/rotate_copy",
            "-I../mutating/rotate",
            "-I../mutating/replace_copy",
            "-I../mutating/replace",
            "-I../mutating/remove_copy",
            "-I../mutating/remove_copy2",
            "-I../mutating/remove_copy3",
            "-I../mutating/remove",
            "-I../mutating/shuffle",
            "-I../mutating/random_number",
            "-I../mutating/swap",
            "-I../mutating/swap",
            "-I../mutating/copy",
            "-I../mutating/reverse",
            "-I../mutating/swap",
            "-I../mutating/random_number",
            "-o",
            "shuffle/shuffle.o",
            "shuffle/shuffle.c"
        ],
        "directory": "StandardAlgorithms/mutating",
        "file": "shuffle/shuffle.c"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-I../../stack/stack_top",
            "-o",
            "stack_top_wd_test.o",
            "stack_top_wd_test.cpp"
        ],
        "directory": "StandardAlgorithms/stack_wd/stack_top_wd",
        "file": "stack_top_wd_test.cpp"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-o",
            "upper_bound_test.o",
            "upper_bound_test.cpp"
        ],
        "directory": "StandardAlgorithms/binarysearch/upper_bound",
        "file": "upper_bound_test.cpp"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-I../../maxmin/make_pair",
            "-o",
            "minmax_element_test.o",
            "minmax_element_test.cpp"
        ],
        "directory": "StandardAlgorithms/maxmin/minmax_element",
        "file": "minmax_element_test.cpp"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-I../../stack/stack_init",
            "-I../../stack/stack_size",
            "-o",
            "stack_empty_test.o",
            "stack_empty_test.cpp"
        ],
        "directory": "StandardAlgorithms/stack/stack_empty",
        "file": "stack_empty_test.cpp"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-I../../stack/stack_size",
            "-o",
            "stack_size_wd_test.o",
            "stack_size_wd_test.cpp"
        ],
        "directory": "StandardAlgorithms/stack_wd/stack_size_wd",
        "file": "stack_size_wd_test.cpp"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-I../../heap/make_heap",
            "-I../../heap/sort_heap",
            "-o",
            "heap_sort_test.o",
            "heap_sort_test.cpp"
        ],
        "directory": "StandardAlgorithms/sorting/heap_sort",
        "file": "heap_sort_test.cpp"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-I../../nonmutating/mismatch",
            "-o",
            "equal_test.o",
            "equal_test.cpp"
        ],
        "directory": "StandardAlgorithms/nonmutating/equal",
        "file": "equal_test.cpp"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-I../../nonmutating/equal",
            "-I../../stack/stack_init",
            "-o",
            "stack_equal_test.o",
            "stack_equal_test.cpp"
        ],
        "directory": "StandardAlgorithms/stack/stack_equal",
        "file": "stack_equal_test.cpp"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../maxmin/clamp",
            "-I../maxmin/max_element",
            "-I../maxmin/max_element2",
            "-I../maxmin/max_seq",
            "-I../maxmin/min_element",
            "-I../maxmin/make_pair",
            "-I../maxmin/minmax_element",
            "-I../maxmin/max_element2",
            "-I../maxmin/make_pair",
            "-o",
            "max_element2/max_element2.o",
            "max_element2/max_element2.c"
        ],
        "directory": "StandardAlgorithms/maxmin",
        "file": "max_element2/max_element2.c"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-I../../stack/stack_pop",
            "-I../../stack/stack_size",
            "-o",
            "axiom_size_of_pop_test.o",
            "axiom_size_of_pop_test.cpp"
        ],
        "directory": "StandardAlgorithms/stack_axiom/axiom_size_of_pop",
        "file": "axiom_size_of_pop_test.cpp"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../sorting/is_sorted",
            "-I../sorting/partial_sort",
            "-I../sorting/bubble_sort",
            "-I../sorting/selection_sort",
            "-I../sorting/insertion_sort",
            "-I../sorting/heap_sort",
            "-I../sorting/merge",
            "-I../mutating/swap",
            "-I../heap/pop_heap",
            "-I../heap/push_heap",
            "-I../heap/make_heap",
            "-I../heap/sort_heap",
            "-I../mutating/swap",
            "-I../mutating/swap",
            "-I../maxmin/min_element",
            "-I../binarysearch/upper_bound",
            "-I../mutating/rotate",
            "-I../heap/make_heap",
            "-I../heap/sort_heap",
            "-I../mutating/copy",
            "-o",
            "heap_sort/heap_sort.o",
            "heap_sort/heap_sort.c"
        ],
        "directory": "StandardAlgorithms/sorting",
        "file": "heap_sort/heap_sort.c"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-I../../heap/pop_heap",
            "-I../../heap/make_heap",
            "-o",
            "sort_heap_test.o",
            "sort_heap_test.cpp"
        ],
        "directory": "StandardAlgorithms/heap/sort_heap",
        "file": "sort_heap_test.cpp"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-I../../binarysearch/lower_bound",
            "-I../../binarysearch/upper_bound",
            "-I../../maxmin/make_pair",
            "-o",
            "equal_range_test.o",
            "equal_range_test.cpp"
        ],
        "directory": "StandardAlgorithms/binarysearch/equal_range",
        "file": "equal_range_test.cpp"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../nonmutating/find",
            "-I../nonmutating/find2",
            "-I../nonmutating/find3",
            "-I../nonmutating/find4",
            "-I../nonmutating/find5",
            "-I../nonmutating/find_if_not",
            "-I../nonmutating/find_first_of",
            "-I../nonmutating/adjacent_find",
            "-I../nonmutating/mismatch",
            "-I../nonmutating/equal",
            "-I../nonmutating/search",
            "-I../nonmutating/search_n",
            "-I../nonmutating/find_end",
            "-I../nonmutating/count",
            "-I../nonmutating/count2",
            "-I../nonmutating/find3",
            "-I../nonmutating/find2",
            "-I../nonmutating/find2",
            "-I../nonmutating/mismatch",
            "-I../nonmutating/equal",
            "-I../nonmutating/equal",
            "-o",
            "count2/count2.o",
            "count2/count2.c"
        ],
        "directory": "StandardAlgorithms/nonmutating",
        "file": "count2/count2.c"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../mutating/fill",
            "-I../mutating/swap",
            "-I../mutating/swap_ranges",
            "-I../mutating/copy",
            "-I../mutating/copy_backward",
            "-I../mutating/reverse_copy",
            "-I../mutating/reverse",
            "-I../mutating/rotate_copy",
            "-I../mutating/rotate",
            "-I../mutating/replace_copy",
            "-I../mutating/replace",
            "-I../mutating/remove_copy",
            "-I../mutating/remove_copy2",
            "-I../mutating/remove_copy3",
            "-I../mutating/remove",
            "-I../mutating/shuffle",
            "-I../mutating/random_number",
            "-I../mutating/swap",
            "-I../mutating/swap",
            "-I../mutating/copy",
            "-I../mutating/reverse",
            "-I../mutating/swap",
            "-I../mutating/random_number",
            "-o",
            "rotate/rotate.o",
            "rotate/rotate.c"
        ],
        "directory": "StandardAlgorithms/mutating",
        "file": "rotate/rotate.c"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../mutating/fill",
            "-I../mutating/swap",
            "-I../mutating/swap_ranges",
            "-I../mutating/copy",
            "-I../mutating/copy_backward",
            "-I../mutating/reverse_copy",
            "-I../mutating/reverse",
            "-I../mutating/rotate_copy",
            "-I../mutating/rotate",
            "-I../mutating/replace_copy",
            "-I../mutating/replace",
            "-I../mutating/remove_copy",
            "-I../mutating/remove_copy2",
            "-I../mutating/remove_copy3",
            "-I../mutating/remove",
            "-I../mutating/shuffle",
            "-I../mutating/random_number",
            "-I../mutating/swap",
            "-I../mutating/swap",
            "-I../mutating/copy",
            "-I../mutating/reverse",
            "-I../mutating/swap",
            "-I../mutating/random_number",
            "-o",
            "rotate_copy/rotate_copy.o",
            "rotate_copy/rotate_copy.c"
        ],
        "directory": "StandardAlgorithms/mutating",
        "file": "rotate_copy/rotate_copy.c"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../stack_wd/stack_size_wd",
            "-I../stack_wd/stack_empty_wd",
            "-I../stack_wd/stack_top_wd",
            "-I../stack_wd/stack_push_wd",
            "-I../stack_wd/stack_pop_wd",
            "-I../stack/stack_size",
            "-I../stack/stack_empty",
            "-I../stack/stack_top",
            "-I../stack/stack_push",
            "-I../stack/stack_pop",
            "-o",
            "stack_empty_wd/stack_empty_wd.o",
            "stack_empty_wd/stack_empty_wd.c"
        ],
        "directory": "StandardAlgorithms/stack_wd",
        "file": "stack_empty_wd/stack_empty_wd.c"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../nonmutating/find",
            "-I../nonmutating/find2",
            "-I../nonmutating/find3",
            "-I../nonmutating/find4",
            "-I../nonmutating/find5",
            "-I../nonmutating/find_if_not",
            "-I../nonmutating/find_first_of",
            "-I../nonmutating/adjacent_find",
            "-I../nonmutating/mismatch",
            "-I../nonmutating/equal",
            "-I../nonmutating/search",
            "-I../nonmutating/search_n",
            "-I../nonmutating/find_end",
            "-I../nonmutating/count",
            "-I../nonmutating/count2",
            "-I../nonmutating/find3",
            "-I../nonmutating/find2",
            "-I../nonmutating/find2",
            "-I../nonmutating/mismatch",
            "-I../nonmutating/equal",
            "-I../nonmutating/equal",
            "-o",
            "find2/find2.o",
            "find2/find2.c"
        ],
        "directory": "StandardAlgorithms/nonmutating",
        "file": "find2/find2.c"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../mutating/fill",
            "-I../mutating/swap",
            "-I../mutating/swap_ranges",
            "-I../mutating/copy",
            "-I../mutating/copy_backward",
            "-I../mutating/reverse_copy",
            "-I../mutating/reverse",
            "-I../mutating/rotate_copy",
            "-I../mutating/rotate",
            "-I../mutating/replace_copy",
            "-I../mutating/replace",
            "-I../mutating/remove_copy",
            "-I../mutating/remove_copy2",
            "-I../mutating/remove_copy3",
            "-I../mutating/remove",
            "-I../mutating/shuffle",
            "-I../mutating/random_number",
            "-I../mutating/swap",
            "-I../mutating/swap",
            "-I../mutating/copy",
            "-I../mutating/reverse",
            "-I../mutating/swap",
            "-I../mutating/random_number",
            "-o",
            "remove_copy/remove_copy.o",
            "remove_copy/remove_copy.c"
        ],
        "directory": "StandardAlgorithms/mutating",
        "file": "remove_copy/remove_copy.c"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-o",
            "clamp_test.o",
            "clamp_test.cpp"
        ],
        "directory": "StandardAlgorithms/maxmin/clamp",
        "file": "clamp_test.cpp"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../mutating/fill",
            "-I../mutating/swap",
            "-I../mutating/swap_ranges",
            "-I../mutating/copy",
            "-I../mutating/copy_backward",
            "-I../mutating/reverse_copy",
            "-I../mutating/reverse",
            "-I../mutating/rotate_copy",
            "-I../mutating/rotate",
            "-I../mutating/replace_copy",
            "-I../mutating/replace",
            "-I../mutating/remove_copy",
            "-I../mutating/remove_copy2",
            "-I../mutating/remove_copy3",
            "-I../mutating/remove",
            "-I../mutating/shuffle",
            "-I../mutating/random_number",
            "-I../mutating/swap",
            "-I../mutating/swap",
            "-I../mutating/copy",
            "-I../mutating/reverse",
            "-I../mutating/swap",
            "-I../mutating/random_number",
            "-o",
            "replace/replace.o",
            "replace/replace.c"
        ],
        "directory": "StandardAlgorithms/mutating",
        "file": "replace/replace.c"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../nonmutating/find",
            "-I../nonmutating/find2",
            "-I../nonmutating/find3",
            "-I../nonmutating/find4",
            "-I../nonmutating/find5",
            "-I../nonmutating/find_if_not",
            "-I../nonmutating/find_first_of",
            "-I../nonmutating/adjacent_find",
            "-I../nonmutating/mismatch",
            "-I../nonmutating/equal",
            "-I../nonmutating/search",
            "-I../nonmutating/search_n",
            "-I../nonmutating/find_end",
            "-I../nonmutating/count",
            "-I../nonmutating/count2",
            "-I../nonmutating/find3",
            "-I../nonmutating/find2",
            "-I../nonmutating/find2",
            "-I../nonmutating/mismatch",
            "-I../nonmutating/equal",
            "-I../nonmutating/equal",
            "-o",
            "find_end/find_end.o",
            "find_end/find_end.c"
        ],
        "directory": "StandardAlgorithms/nonmutating",
        "file": "find_end/find_end.c"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../mutating/fill",
            "-I../mutating/swap",
            "-I../mutating/swap_ranges",
            "-I../mutating/copy",
            "-I../mutating/copy_backward",
            "-I../mutating/reverse_copy",
            "-I../mutating/reverse",
            "-I../mutating/rotate_copy",
            "-I../mutating/rotate",
            "-I../mutating/replace_copy",
            "-I../mutating/replace",
            "-I../mutating/remove_copy",
            "-I../mutating/remove_copy2",
            "-I../mutating/remove_copy3",
            "-I../mutating/remove",
            "-I../mutating/shuffle",
            "-I../mutating/random_number",
            "-I../mutating/swap",
            "-I../mutating/swap",
            "-I../mutating/copy",
            "-I../mutating/reverse",
            "-I../mutating/swap",
            "-I../mutating/random_number",
            "-o",
            "remove/remove.o",
            "remove/remove.c"
        ],
        "directory": "StandardAlgorithms/mutating",
        "file": "remove/remove.c"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../stack_axiom/axiom_size_of_init",
            "-I../stack_axiom/axiom_size_of_push",
            "-I../stack_axiom/axiom_top_of_push",
            "-I../stack_axiom/axiom_size_of_pop",
            "-I../stack_axiom/axiom_pop_of_push",
            "-I../stack_axiom/axiom_push_of_pop_top",
            "-I../stack/stack_init",
            "-I../stack/stack_size",
            "-I../stack/stack_push",
            "-I../stack/stack_size",
            "-I../stack/stack_top",
            "-I../stack/stack_push",
            "-I../stack/stack_pop",
            "-I../stack/stack_size",
            "-I../stack/stack_pop",
            "-I../stack/stack_push",
            "-I../stack/stack_pop",
            "-I../stack/stack_push",
            "-I../stack/stack_top",
            "-o",
            "axiom_top_of_push/axiom_top_of_push.o",
            "axiom_top_of_push/axiom_top_of_push.c"
        ],
        "directory": "StandardAlgorithms/stack_axiom",
        "file": "axiom_top_of_push/axiom_top_of_push.c"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-I../../binarysearch/lower_bound",
            "-o",
            "binary_search_test.o",
            "binary_search_test.cpp"
        ],
        "directory": "StandardAlgorithms/binarysearch/binary_search",
        "file": "binary_search_test.cpp"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-o",
            "count_test.o",
            "count_test.cpp"
        ],
        "directory": "StandardAlgorithms/nonmutating/count",
        "file": "count_test.cpp"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-I../../mutating/swap",
            "-I../../maxmin/min_element",
            "-o",
            "selection_sort_test.o",
            "selection_sort_test.cpp"
        ],
        "directory": "StandardAlgorithms/sorting/selection_sort",
        "file": "selection_sort_test.cpp"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-I../../mutating/swap",
            "-o",
            "bubble_sort_test.o",
            "bubble_sort_test.cpp"
        ],
        "directory": "StandardAlgorithms/sorting/bubble_sort",
        "file": "bubble_sort_test.cpp"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../stack/stack_equal",
            "-I../stack/stack_init",
            "-I../stack/stack_size",
            "-I../stack/stack_full",
            "-I../stack/stack_empty",
            "-I../stack/stack_top",
            "-I../stack/stack_push",
            "-I../stack/stack_pop",
            "-I../nonmutating/equal",
            "-I../stack/stack_init",
            "-I../stack/stack_init",
            "-I../stack/stack_init",
            "-I../stack/stack_size",
            "-I../stack/stack_init",
            "-I../stack/stack_size",
            "-I../stack/stack_empty",
            "-I../stack/stack_init",
            "-I../stack/stack_init",
            "-I../stack/stack_empty",
            "-I../stack/stack_full",
            "-I../stack/stack_push",
            "-I../stack/stack_init",
            "-I../stack/stack_empty",
            "-o",
            "stack_size/stack_size.o",
            "stack_size/stack_size.c"
        ],
        "directory": "StandardAlgorithms/stack",
        "file": "stack_size/stack_size.c"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-I../../stack/stack_pop",
            "-I../../stack/stack_push",
            "-I../../stack/stack_top",
            "-o",
            "axiom_push_of_pop_top_test.o",
            "axiom_push_of_pop_top_test.cpp"
        ],
        "directory": "StandardAlgorithms/stack_axiom/axiom_push_of_pop_top",
        "file": "axiom_push_of_pop_top_test.cpp"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../mutating/fill",
            "-I../mutating/swap",
            "-I../mutating/swap_ranges",
            "-I../mutating/copy",
            "-I../mutating/copy_backward",
            "-I../mutating/reverse_copy",
            "-I../mutating/reverse",
            "-I../mutating/rotate_copy",
            "-I../mutating/rotate",
            "-I../mutating/replace_copy",
            "-I../mutating/replace",
            "-I../mutating/remove_copy",
            "-I../mutating/remove_copy2",
            "-I../mutating/remove_copy3",
            "-I../mutating/remove",
            "-I../mutating/shuffle",
            "-I../mutating/random_number",
            "-I../mutating/swap",
            "-I../mutating/swap",
            "-I../mutating/copy",
            "-I../mutating/reverse",
            "-I../mutating/swap",
            "-I../mutating/random_number",
            "-o",
            "copy_backward/copy_backward.o",
            "copy_backward/copy_backward.c"
        ],
        "directory": "StandardAlgorithms/mutating",
        "file": "copy_backward/copy_backward.c"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-I../../mutating/swap",
            "-o",
            "swap_ranges_test.o",
            "swap_ranges_test.cpp"
        ],
        "directory": "StandardAlgorithms/mutating/swap_ranges",
        "file": "swap_ranges_test.cpp"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../heap/heap_parent",
            "-I../heap/heap_child_max",
            "-I../heap/is_heap_until",
            "-I../heap/is_heap",
            "-I../heap/push_heap",
            "-I../heap/pop_heap",
            "-I../heap/make_heap",
            "-I../heap/sort_heap",
            "-I../heap/is_heap_until",
            "-I../heap/heap_parent",
            "-I../heap/is_heap",
            "-I../heap/heap_child_max",
            "-I../heap/is_heap",
            "-I../heap/push_heap",
            "-I../heap/is_heap",
            "-I../heap/pop_heap",
            "-I../heap/make_heap",
            "-o",
            "make_heap/make_heap.o",
            "make_heap/make_heap.c"
        ],
        "directory": "StandardAlgorithms/heap",
        "file": "make_heap/make_heap.c"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../stack_axiom/axiom_size_of_init",
            "-I../stack_axiom/axiom_size_of_push",
            "-I../stack_axiom/axiom_top_of_push",
            "-I../stack_axiom/axiom_size_of_pop",
            "-I../stack_axiom/axiom_pop_of_push",
            "-I../stack_axiom/axiom_push_of_pop_top",
            "-I../stack/stack_init",
            "-I../stack/stack_size",
            "-I../stack/stack_push",
            "-I../stack/stack_size",
            "-I../stack/stack_top",
            "-I../stack/stack_push",
            "-I../stack/stack_pop",
            "-I../stack/stack_size",
            "-I../stack/stack_pop",
            "-I../stack/stack_push",
            "-I../stack/stack_pop",
            "-I../stack/stack_push",
            "-I../stack/stack_top",
            "-o",
            "axiom_size_of_pop/axiom_size_of_pop.o",
            "axiom_size_of_pop/axiom_size_of_pop.c"
        ],
        "directory": "StandardAlgorithms/stack_axiom",
        "file": "axiom_size_of_pop/axiom_size_of_pop.c"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../binarysearch/lower_bound",
            "-I../binarysearch/upper_bound",
            "-I../binarysearch/equal_range",
            "-I../binarysearch/equal_range2",
            "-I../binarysearch/binary_search",
            "-I../binarysearch/binary_search2",
            "-I../binarysearch/lower_bound",
            "-I../binarysearch/upper_bound",
            "-I../maxmin/make_pair",
            "-I../binarysearch/lower_bound",
            "-I../binarysearch/upper_bound",
            "-I../maxmin/make_pair",
            "-I../binarysearch/lower_bound",
            "-I../binarysearch/lower_bound",
            "-o",
            "binary_search2/binary_search2.o",
            "binary_search2/binary_search2.c"
        ],
        "directory": "StandardAlgorithms/binarysearch",
        "file": "binary_search2/binary_search2.c"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../numeric/iota",
            "-I../numeric/accumulate",
            "-I../numeric/inner_product",
            "-I../numeric/partial_sum",
            "-I../numeric/adjacent_difference",
            "-I../numeric/partial_sum_inv",
            "-I../numeric/adjacent_difference_inv",
            "-I../numeric/partial_sum",
            "-I../numeric/adjacent_difference",
            "-I../numeric/partial_sum",
            "-I../numeric/adjacent_difference",
            "-o",
            "adjacent_difference/adjacent_difference.o",
            "adjacent_difference/adjacent_difference.c"
        ],
        "directory": "StandardAlgorithms/numeric",
        "file": "adjacent_difference/adjacent_difference.c"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../nonmutating/find",
            "-I../nonmutating/find2",
            "-I../nonmutating/find3",
            "-I../nonmutating/find4",
            "-I../nonmutating/find5",
            "-I../nonmutating/find_if_not",
            "-I../nonmutating/find_first_of",
            "-I../nonmutating/adjacent_find",
            "-I../nonmutating/mismatch",
            "-I../nonmutating/equal",
            "-I../nonmutating/search",
            "-I../nonmutating/search_n",
            "-I../nonmutating/find_end",
            "-I../nonmutating/count",
            "-I../nonmutating/count2",
            "-I../nonmutating/find3",
            "-I../nonmutating/find2",
            "-I../nonmutating/find2",
            "-I../nonmutating/mismatch",
            "-I../nonmutating/equal",
            "-I../nonmutating/equal",
            "-o",
            "equal/equal.o",
            "equal/equal.c"
        ],
        "directory": "StandardAlgorithms/nonmutating",
        "file": "equal/equal.c"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-o",
            "partial_sum_test.o",
            "partial_sum_test.cpp"
        ],
        "directory": "StandardAlgorithms/numeric/partial_sum",
        "file": "partial_sum_test.cpp"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-I../../stack/stack_empty",
            "-o",
            "stack_empty_wd_test.o",
            "stack_empty_wd_test.cpp"
        ],
        "directory": "StandardAlgorithms/stack_wd/stack_empty_wd",
        "file": "stack_empty_wd_test.cpp"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-o",
            "copy_test.o",
            "copy_test.cpp"
        ],
        "directory": "StandardAlgorithms/mutating/copy",
        "file": "copy_test.cpp"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../binarysearch/lower_bound",
            "-I../binarysearch/upper_bound",
            "-I../binarysearch/equal_range",
            "-I../binarysearch/equal_range2",
            "-I../binarysearch/binary_search",
            "-I../binarysearch/binary_search2",
            "-I../binarysearch/lower_bound",
            "-I../binarysearch/upper_bound",
            "-I../maxmin/make_pair",
            "-I../binarysearch/lower_bound",
            "-I../binarysearch/upper_bound",
            "-I../maxmin/make_pair",
            "-I../binarysearch/lower_bound",
            "-I../binarysearch/lower_bound",
            "-o",
            "equal_range/equal_range.o",
            "equal_range/equal_range.c"
        ],
        "directory": "StandardAlgorithms/binarysearch",
        "file": "equal_range/equal_range.c"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../mutating/fill",
            "-I../mutating/swap",
            "-I../mutating/swap_ranges",
            "-I../mutating/copy",
            "-I../mutating/copy_backward",
            "-I../mutating/reverse_copy",
            "-I../mutating/reverse",
            "-I../mutating/rotate_copy",
            "-I../mutating/rotate",
            "-I../mutating/replace_copy",
            "-I../mutating/replace",
            "-I../mutating/remove_copy",
            "-I../mutating/remove_copy2",
            "-I../mutating/remove_copy3",
            "-I../mutating/remove",
            "-I../mutating/shuffle",
            "-I../mutating/random_number",
            "-I../mutating/swap",
            "-I../mutating/swap",
            "-I../mutating/copy",
            "-I../mutating/reverse",
            "-I../mutating/swap",
            "-I../mutating/random_number",
            "-o",
            "fill/fill.o",
            "fill/fill.c"
        ],
        "directory": "StandardAlgorithms/mutating",
        "file": "fill/fill.c"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-o",
            "min_element_test.o",
            "min_element_test.cpp"
        ],
        "directory": "StandardAlgorithms/maxmin/min_element",
        "file": "min_element_test.cpp"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-o",
            "inner_product_test.o",
            "inner_product_test.cpp"
        ],
        "directory": "StandardAlgorithms/numeric/inner_product",
        "file": "inner_product_test.cpp"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../heap/heap_parent",
            "-I../heap/heap_child_max",
            "-I../heap/is_heap_until",
            "-I../heap/is_heap",
            "-I../heap/push_heap",
            "-I../heap/pop_heap",
            "-I../heap/make_heap",
            "-I../heap/sort_heap",
            "-I../heap/is_heap_until",
            "-I../heap/heap_parent",
            "-I../heap/is_heap",
            "-I../heap/heap_child_max",
            "-I../heap/is_heap",
            "-I../heap/push_heap",
            "-I../heap/is_heap",
            "-I../heap/pop_heap",
            "-I../heap/make_heap",
            "-o",
            "is_heap_until/is_heap_until.o",
            "is_heap_until/is_heap_until.c"
        ],
        "directory": "StandardAlgorithms/heap",
        "file": "is_heap_until/is_heap_until.c"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../heap/heap_parent",
            "-I../heap/heap_child_max",
            "-I../heap/is_heap_until",
            "-I../heap/is_heap",
            "-I../heap/push_heap",
            "-I../heap/pop_heap",
            "-I../heap/make_heap",
            "-I../heap/sort_heap",
            "-I../heap/is_heap_until",
            "-I../heap/heap_parent",
            "-I../heap/is_heap",
            "-I../heap/heap_child_max",
            "-I../heap/is_heap",
            "-I../heap/push_heap",
            "-I../heap/is_heap",
            "-I../heap/pop_heap",
            "-I../heap/make_heap",
            "-o",
            "sort_heap/sort_heap.o",
            "sort_heap/sort_heap.c"
        ],
        "directory": "StandardAlgorithms/heap",
        "file": "sort_heap/sort_heap.c"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../heap/heap_parent",
            "-I../heap/heap_child_max",
            "-I../heap/is_heap_until",
            "-I../heap/is_heap",
            "-I../heap/push_heap",
            "-I../heap/pop_heap",
            "-I../heap/make_heap",
            "-I../heap/sort_heap",
            "-I../heap/is_heap_until",
            "-I../heap/heap_parent",
            "-I../heap/is_heap",
            "-I../heap/heap_child_max",
            "-I../heap/is_heap",
            "-I../heap/push_heap",
            "-I../heap/is_heap",
            "-I../heap/pop_heap",
            "-I../heap/make_heap",
            "-o",
            "heap_child_max/heap_child_max.o",
            "heap_child_max/heap_child_max.c"
        ],
        "directory": "StandardAlgorithms/heap",
        "file": "heap_child_max/heap_child_max.c"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../stack/stack_equal",
            "-I../stack/stack_init",
            "-I../stack/stack_size",
            "-I../stack/stack_full",
            "-I../stack/stack_empty",
            "-I../stack/stack_top",
            "-I../stack/stack_push",
            "-I../stack/stack_pop",
            "-I../nonmutating/equal",
            "-I../stack/stack_init",
            "-I../stack/stack_init",
            "-I../stack/stack_init",
            "-I../stack/stack_size",
            "-I../stack/stack_init",
            "-I../stack/stack_size",
            "-I../stack/stack_empty",
            "-I../stack/stack_init",
            "-I../stack/stack_init",
            "-I../stack/stack_empty",
            "-I../stack/stack_full",
            "-I../stack/stack_push",
            "-I../stack/stack_init",
            "-I../stack/stack_empty",
            "-o",
            "stack_full/stack_full.o",
            "stack_full/stack_full.c"
        ],
        "directory": "StandardAlgorithms/stack",
        "file": "stack_full/stack_full.c"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../binarysearch/lower_bound",
            "-I../binarysearch/upper_bound",
            "-I../binarysearch/equal_range",
            "-I../binarysearch/equal_range2",
            "-I../binarysearch/binary_search",
            "-I../binarysearch/binary_search2",
            "-I../binarysearch/lower_bound",
            "-I../binarysearch/upper_bound",
            "-I../maxmin/make_pair",
            "-I../binarysearch/lower_bound",
            "-I../binarysearch/upper_bound",
            "-I../maxmin/make_pair",
            "-I../binarysearch/lower_bound",
            "-I../binarysearch/lower_bound",
            "-o",
            "equal_range2/equal_range2.o",
            "equal_range2/equal_range2.c"
        ],
        "directory": "StandardAlgorithms/binarysearch",
        "file": "equal_range2/equal_range2.c"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../stack/stack_equal",
            "-I../stack/stack_init",
            "-I../stack/stack_size",
            "-I../stack/stack_full",
            "-I../stack/stack_empty",
            "-I../stack/stack_top",
            "-I../stack/stack_push",
            "-I../stack/stack_pop",
            "-I../nonmutating/equal",
            "-I../stack/stack_init",
            "-I../stack/stack_init",
            "-I../stack/stack_init",
            "-I../stack/stack_size",
            "-I../stack/stack_init",
            "-I../stack/stack_size",
            "-I../stack/stack_empty",
            "-I../stack/stack_init",
            "-I../stack/stack_init",
            "-I../stack/stack_empty",
            "-I../stack/stack_full",
            "-I../stack/stack_push",
            "-I../stack/stack_init",
            "-I../stack/stack_empty",
            "-o",
            "stack_push/stack_push.o",
            "stack_push/stack_push.c"
        ],
        "directory": "StandardAlgorithms/stack",
        "file": "stack_push/stack_push.c"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-o",
            "remove_test.o",
            "remove_test.cpp"
        ],
        "directory": "StandardAlgorithms/mutating/remove",
        "file": "remove_test.cpp"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-o",
            "max_element2_test.o",
            "max_element2_test.cpp"
        ],
        "directory": "StandardAlgorithms/maxmin/max_element2",
        "file": "max_element2_test.cpp"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../maxmin/clamp",
            "-I../maxmin/max_element",
            "-I../maxmin/max_element2",
            "-I../maxmin/max_seq",
            "-I../maxmin/min_element",
            "-I../maxmin/make_pair",
            "-I../maxmin/minmax_element",
            "-I../maxmin/max_element2",
            "-I../maxmin/make_pair",
            "-o",
            "make_pair/make_pair.o",
            "make_pair/make_pair.c"
        ],
        "directory": "StandardAlgorithms/maxmin",
        "file": "make_pair/make_pair.c"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../sorting/is_sorted",
            "-I../sorting/partial_sort",
            "-I../sorting/bubble_sort",
            "-I../sorting/selection_sort",
            "-I../sorting/insertion_sort",
            "-I../sorting/heap_sort",
            "-I../sorting/merge",
            "-I../mutating/swap",
            "-I../heap/pop_heap",
            "-I../heap/push_heap",
            "-I../heap/make_heap",
            "-I../heap/sort_heap",
            "-I../mutating/swap",
            "-I../mutating/swap",
            "-I../maxmin/min_element",
            "-I../binarysearch/upper_bound",
            "-I../mutating/rotate",
            "-I../heap/make_heap",
            "-I../heap/sort_heap",
            "-I../mutating/copy",
            "-o",
            "merge/merge.o",
            "merge/merge.c"
        ],
        "directory": "StandardAlgorithms/sorting",
        "file": "merge/merge.c"
    },
    {
        "arguments": [
            "g++",
            "-c",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I../..",
            "-I../../Logic",
            "-I.",
            "-o",
            "find_if_not_test.o",
            "find_if_not_test.cpp"
        ],
        "directory": "StandardAlgorithms/nonmutating/find_if_not",
        "file": "find_if_not_test.cpp"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../stack_axiom/axiom_size_of_init",
            "-I../stack_axiom/axiom_size_of_push",
            "-I../stack_axiom/axiom_top_of_push",
            "-I../stack_axiom/axiom_size_of_pop",
            "-I../stack_axiom/axiom_pop_of_push",
            "-I../stack_axiom/axiom_push_of_pop_top",
            "-I../stack/stack_init",
            "-I../stack/stack_size",
            "-I../stack/stack_push",
            "-I../stack/stack_size",
            "-I../stack/stack_top",
            "-I../stack/stack_push",
            "-I../stack/stack_pop",
            "-I../stack/stack_size",
            "-I../stack/stack_pop",
            "-I../stack/stack_push",
            "-I../stack/stack_pop",
            "-I../stack/stack_push",
            "-I../stack/stack_top",
            "-o",
            "axiom_push_of_pop_top/axiom_push_of_pop_top.o",
            "axiom_push_of_pop_top/axiom_push_of_pop_top.c"
        ],
        "directory": "StandardAlgorithms/stack_axiom",
        "file": "axiom_push_of_pop_top/axiom_push_of_pop_top.c"
    },
    {
        "arguments": [
            "cc",
            "-c",
            "-x",
            "c++",
            "-std=c++17",
            "-Wall",
            "-pedantic",
            "-Werror",
            "-O2",
            "-I..",
            "-I../Logic",
            "-I../maxmin/clamp",
            "-I../maxmin/max_element",
            "-I../maxmin/max_element2",
            "-I../maxmin/max_seq",
            "-I../maxmin/min_element",
            "-I../maxmin/make_pair",
            "-I../maxmin/minmax_element",
            "-I../maxmin/max_element2",
            "-I../maxmin/make_pair",
            "-o",
            "clamp/clamp.o",
            "clamp/clamp.c"
        ],
        "directory": "StandardAlgorithms/maxmin",
        "file": "minmax_element/minmax_element.cpp"
    }
]
